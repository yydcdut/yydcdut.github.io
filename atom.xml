<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Android杂文 - yydcdut</title>
  
  <subtitle>Android (ง •̀_•́)ง</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yydcdut.com/"/>
  <updated>2019-07-09T07:28:06.863Z</updated>
  <id>http://yydcdut.com/</id>
  
  <author>
    <name>yydcdut</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>OkHttp - BridgeInterceptor源码简析</title>
    <link href="http://yydcdut.com/2019/07/09/okhttp-bridge-interceptor-analyse/"/>
    <id>http://yydcdut.com/2019/07/09/okhttp-bridge-interceptor-analyse/</id>
    <published>2019-07-09T07:27:07.000Z</published>
    <updated>2019-07-09T07:28:06.863Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Github: &lt;a href=&quot;https://github.com/square/okhttp&quot;&gt;okhttp&lt;/a&gt;      分析版本：&lt;a href=&quot;https://github.com/square/okhttp/tree/930d4d07d836aef3c2681867d6ab9e73c23aacfb&quot;&gt;930d4d0&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Bridges from application code to network code&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yydcdut.com/categories/Android/"/>
    
    
      <category term="OkHttp" scheme="http://yydcdut.com/tags/OkHttp/"/>
    
      <category term="源码" scheme="http://yydcdut.com/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>OkHttp - RetryAndFollowUpInterceptor源码简析</title>
    <link href="http://yydcdut.com/2019/07/08/okhttp-retry-and-follow-up-interceptor-analyse/"/>
    <id>http://yydcdut.com/2019/07/08/okhttp-retry-and-follow-up-interceptor-analyse/</id>
    <published>2019-07-08T02:47:16.000Z</published>
    <updated>2019-07-09T07:27:34.334Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Github: &lt;a href=&quot;https://github.com/square/okhttp&quot;&gt;okhttp&lt;/a&gt;             分析版本：&lt;a href=&quot;https://github.com/square/okhttp/tree/930d4d07d836aef3c2681867d6ab9e73c23aacfb&quot;&gt;930d4d0&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This interceptor recovers from failures and follows redirects as necessary&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yydcdut.com/categories/Android/"/>
    
    
      <category term="OkHttp" scheme="http://yydcdut.com/tags/OkHttp/"/>
    
      <category term="源码" scheme="http://yydcdut.com/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>OkHttp源码解析</title>
    <link href="http://yydcdut.com/2019/07/07/okhttp-analyse/"/>
    <id>http://yydcdut.com/2019/07/07/okhttp-analyse/</id>
    <published>2019-07-07T07:04:37.000Z</published>
    <updated>2019-07-07T07:08:29.533Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Github: &lt;a href=&quot;https://github.com/square/okhttp&quot;&gt;okhttp&lt;/a&gt;      分析版本：&lt;a href=&quot;https://github.com/square/okhttp/tree/930d4d07d836aef3c2681867d6ab9e73c23aacfb&quot;&gt;930d4d0&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;An HTTP client for Android, Kotlin, and Java.&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yydcdut.com/categories/Android/"/>
    
    
      <category term="OkHttp" scheme="http://yydcdut.com/tags/OkHttp/"/>
    
      <category term="源码" scheme="http://yydcdut.com/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>ijkplayer框架简析 -- 音视频同步</title>
    <link href="http://yydcdut.com/2019/07/06/ijkplayer-video-audio-sync/"/>
    <id>http://yydcdut.com/2019/07/06/ijkplayer-video-audio-sync/</id>
    <published>2019-07-06T08:21:55.000Z</published>
    <updated>2019-07-06T08:27:32.147Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;音频和视频是在独自线程中进行解码播放的，需要一个同步的操作来保证时间节点的一致性&lt;/p&gt;
    
    </summary>
    
      <category term="c" scheme="http://yydcdut.com/categories/c/"/>
    
    
      <category term="ijkplayer" scheme="http://yydcdut.com/tags/ijkplayer/"/>
    
  </entry>
  
  <entry>
    <title>ijkplayer框架简析 -- 读取数据</title>
    <link href="http://yydcdut.com/2019/03/30/ijkplayer-stream-open/"/>
    <id>http://yydcdut.com/2019/03/30/ijkplayer-stream-open/</id>
    <published>2019-03-30T06:45:52.000Z</published>
    <updated>2019-03-30T06:46:47.210Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;IjkMediaPlayer 通过 &lt;code&gt;prepareAsync()&lt;/code&gt; 之后去加载数据、解码数据，调用 &lt;code&gt;start()&lt;/code&gt; 之后去渲染&lt;/p&gt;
    
    </summary>
    
      <category term="c" scheme="http://yydcdut.com/categories/c/"/>
    
    
      <category term="ijkplayer" scheme="http://yydcdut.com/tags/ijkplayer/"/>
    
  </entry>
  
  <entry>
    <title>ijkplayer框架简析 -- 从构造到 onPrepared</title>
    <link href="http://yydcdut.com/2019/03/16/ijkplayer-from-constructor-to-prepare/"/>
    <id>http://yydcdut.com/2019/03/16/ijkplayer-from-constructor-to-prepare/</id>
    <published>2019-03-16T04:22:29.000Z</published>
    <updated>2019-07-06T08:20:57.347Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;从本文开始讲解 ijkplayer 相关的，本篇主要将播放器从初始化到 &lt;code&gt;onPrepared&lt;/code&gt; 回调回来之间的操作&lt;/p&gt;
    
    </summary>
    
      <category term="c" scheme="http://yydcdut.com/categories/c/"/>
    
    
      <category term="ijkplayer" scheme="http://yydcdut.com/tags/ijkplayer/"/>
    
  </entry>
  
  <entry>
    <title>ijkplayer框架简析 -- avcodec_decode_video2</title>
    <link href="http://yydcdut.com/2019/03/10/ijkplayer-ffmpeg-avcodec-decode-video2/"/>
    <id>http://yydcdut.com/2019/03/10/ijkplayer-ffmpeg-avcodec-decode-video2/</id>
    <published>2019-03-10T06:11:20.000Z</published>
    <updated>2019-03-10T06:12:31.401Z</updated>
    
    <summary type="html">
    
      &lt;p&gt; &lt;code&gt;avcodec_decode_video2()&lt;/code&gt; 的作用是解码一帧视频数据，输入一个压缩编码的结构体 AVPacket，输出一个解码后的结构体 AVFrame&lt;/p&gt;
    
    </summary>
    
      <category term="c" scheme="http://yydcdut.com/categories/c/"/>
    
    
      <category term="ijkplayer" scheme="http://yydcdut.com/tags/ijkplayer/"/>
    
  </entry>
  
  <entry>
    <title>ijkplayer框架简析 -- av_read_frame</title>
    <link href="http://yydcdut.com/2019/03/09/ijkplayer-ffmpeg-av-read-frame/"/>
    <id>http://yydcdut.com/2019/03/09/ijkplayer-ffmpeg-av-read-frame/</id>
    <published>2019-03-09T05:25:40.000Z</published>
    <updated>2019-03-10T06:10:32.866Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;av_read_frame()&lt;/code&gt; 的作用是读取码流中的音频若干帧或者视频一帧&lt;/p&gt;
    
    </summary>
    
      <category term="c" scheme="http://yydcdut.com/categories/c/"/>
    
    
      <category term="ijkplayer" scheme="http://yydcdut.com/tags/ijkplayer/"/>
    
  </entry>
  
  <entry>
    <title>ijkplayer框架简析 -- avcodec_open2</title>
    <link href="http://yydcdut.com/2019/03/03/ijkplayer-ffmpeg-avcodec-open2/"/>
    <id>http://yydcdut.com/2019/03/03/ijkplayer-ffmpeg-avcodec-open2/</id>
    <published>2019-03-03T04:03:25.000Z</published>
    <updated>2019-03-03T04:04:35.385Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;avcodec_open2()&lt;/code&gt; 主要作用是初始化一个视音频编解码器的 AVCodecContext&lt;/p&gt;
    
    </summary>
    
      <category term="c" scheme="http://yydcdut.com/categories/c/"/>
    
    
      <category term="ijkplayer" scheme="http://yydcdut.com/tags/ijkplayer/"/>
    
  </entry>
  
  <entry>
    <title>ijkplayer框架简析 -- avformat_find_stream_info</title>
    <link href="http://yydcdut.com/2019/02/24/ijkplayer-ffmpeg-avformat-find-stream-info/"/>
    <id>http://yydcdut.com/2019/02/24/ijkplayer-ffmpeg-avformat-find-stream-info/</id>
    <published>2019-02-24T06:03:07.000Z</published>
    <updated>2019-02-24T06:04:43.848Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;avformat_find_stream_info()&lt;/code&gt; 主要是读媒体文件的 packet ，然后从中提取出流的信息&lt;/p&gt;
    
    </summary>
    
      <category term="c" scheme="http://yydcdut.com/categories/c/"/>
    
    
      <category term="ijkplayer" scheme="http://yydcdut.com/tags/ijkplayer/"/>
    
  </entry>
  
  <entry>
    <title>ijkplayer框架简析 -- avformat_open_input</title>
    <link href="http://yydcdut.com/2019/02/23/ijkplayer-ffmpeg-avformat-open-input/"/>
    <id>http://yydcdut.com/2019/02/23/ijkplayer-ffmpeg-avformat-open-input/</id>
    <published>2019-02-23T05:13:53.000Z</published>
    <updated>2019-02-23T05:14:55.289Z</updated>
    
    <summary type="html">
    
      &lt;p&gt; &lt;code&gt;avformat_open_input()&lt;/code&gt; 方法完成了媒体文件的打开和格式探测的功能&lt;/p&gt;
    
    </summary>
    
      <category term="c" scheme="http://yydcdut.com/categories/c/"/>
    
    
      <category term="ijkplayer" scheme="http://yydcdut.com/tags/ijkplayer/"/>
    
  </entry>
  
  <entry>
    <title>ijkplayer框架简析 -- av_register_all</title>
    <link href="http://yydcdut.com/2019/02/17/ijkplayer-ffmpeg-av-register-all/"/>
    <id>http://yydcdut.com/2019/02/17/ijkplayer-ffmpeg-av-register-all/</id>
    <published>2019-02-17T05:38:34.000Z</published>
    <updated>2019-03-03T04:04:40.284Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;av_register_all()&lt;/code&gt; 是所有使用 FFmpeg 编程中调用的第一个函数。其主要功能是注册所有的 formats 和 protocols&lt;/p&gt;
    
    </summary>
    
      <category term="c" scheme="http://yydcdut.com/categories/c/"/>
    
    
      <category term="ijkplayer" scheme="http://yydcdut.com/tags/ijkplayer/"/>
    
  </entry>
  
  <entry>
    <title>ijkplayer框架简析 -- FFmpeg流程</title>
    <link href="http://yydcdut.com/2019/02/03/ijkplayer-ffmpeg-flow/"/>
    <id>http://yydcdut.com/2019/02/03/ijkplayer-ffmpeg-flow/</id>
    <published>2019-02-03T03:30:40.000Z</published>
    <updated>2019-02-03T03:36:45.064Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;读取媒体文件中音视频数据的基本功能&lt;/p&gt;
    
    </summary>
    
      <category term="c" scheme="http://yydcdut.com/categories/c/"/>
    
    
      <category term="ijkplayer" scheme="http://yydcdut.com/tags/ijkplayer/"/>
    
  </entry>
  
  <entry>
    <title>ijkplayer框架简析 -- FFmpeg中重要结构体</title>
    <link href="http://yydcdut.com/2019/02/02/ijkplayer-ffmpeg-relation/"/>
    <id>http://yydcdut.com/2019/02/02/ijkplayer-ffmpeg-relation/</id>
    <published>2019-02-02T03:09:32.000Z</published>
    <updated>2019-02-03T03:38:24.841Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;A complete, cross-platform solution to record, convert and stream audio and video.&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="c" scheme="http://yydcdut.com/categories/c/"/>
    
    
      <category term="ijkplayer" scheme="http://yydcdut.com/tags/ijkplayer/"/>
    
  </entry>
  
  <entry>
    <title>Learn Java8</title>
    <link href="http://yydcdut.com/2018/09/02/learn-java8/"/>
    <id>http://yydcdut.com/2018/09/02/learn-java8/</id>
    <published>2018-09-02T09:10:13.000Z</published>
    <updated>2019-01-31T08:40:35.413Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Java8 学习笔记，PPT 备忘录~&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://yydcdut.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://yydcdut.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>《巧用Gradle构建Android应用》读书笔记</title>
    <link href="http://yydcdut.com/2017/04/28/gradle-recipes-for-android/"/>
    <id>http://yydcdut.com/2017/04/28/gradle-recipes-for-android/</id>
    <published>2017-04-28T08:03:31.000Z</published>
    <updated>2019-01-31T08:45:19.941Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;《巧用Gradle构建Android应用》读书笔记，适合入门以及查漏补缺。&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://yydcdut.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Gradle" scheme="http://yydcdut.com/tags/Gradle/"/>
    
      <category term="读书笔记" scheme="http://yydcdut.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>ButterKnife源码简析</title>
    <link href="http://yydcdut.com/2017/04/19/butterknife-analyse/"/>
    <id>http://yydcdut.com/2017/04/19/butterknife-analyse/</id>
    <published>2017-04-19T14:38:45.000Z</published>
    <updated>2019-01-31T08:42:55.225Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Github: &lt;a href=&quot;https://github.com/JakeWharton/butterknife&quot;&gt;butterknife&lt;/a&gt;      分析版本：&lt;a href=&quot;https://github.com/JakeWharton/butterknife/tree/fc10f1674a08162ad7cf8c762c11a748c20c25d8&quot;&gt;fc10f16&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ButterKnife 是一个 Android 视图快速注入库，它通过给 View 字段添加注解，可以让我们丢掉 findViewById() 来获取 View 的方法，从而简化了代码。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yydcdut.com/categories/Android/"/>
    
    
      <category term="源码" scheme="http://yydcdut.com/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android UI优化</title>
    <link href="http://yydcdut.com/2017/03/10/ui-optimize/"/>
    <id>http://yydcdut.com/2017/03/10/ui-optimize/</id>
    <published>2017-03-10T07:36:27.000Z</published>
    <updated>2019-01-31T08:48:19.418Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Android 的 UI 优化学习笔记和总结，包括一些导致卡顿的原因和一些解决方案，欢迎大家一起学习交流！&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yydcdut.com/categories/Android/"/>
    
    
      <category term="UI" scheme="http://yydcdut.com/tags/UI/"/>
    
  </entry>
  
  <entry>
    <title>Animation和Animator流程分析</title>
    <link href="http://yydcdut.com/2017/03/01/the-flow-of-animation-and-animator-analyse/"/>
    <id>http://yydcdut.com/2017/03/01/the-flow-of-animation-and-animator-analyse/</id>
    <published>2017-03-01T08:12:28.000Z</published>
    <updated>2017-03-01T08:18:26.000Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; 分析版本：android-23&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Animation 和 Animator 是 Android 上实现动画的两种不同方式，本文是对这两种动画进行流程上的解析，其分析方向主要是 Listener 是怎么回调的，是怎么不断的调用自己的，是间隔多少时间调用自己的。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yydcdut.com/categories/Android/"/>
    
    
      <category term="动画" scheme="http://yydcdut.com/tags/%E5%8A%A8%E7%94%BB/"/>
    
      <category term="流程" scheme="http://yydcdut.com/tags/%E6%B5%81%E7%A8%8B/"/>
    
      <category term="源码" scheme="http://yydcdut.com/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>HashMap源码解析</title>
    <link href="http://yydcdut.com/2016/12/06/hashmap-analyse/"/>
    <id>http://yydcdut.com/2016/12/06/hashmap-analyse/</id>
    <published>2016-12-06T09:54:09.000Z</published>
    <updated>2019-01-31T08:45:39.768Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; 分析版本： JDK1.8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 Java8 之前， HashMap 是链表散列的数据结构，即数组和链表的结合体；从 Java8 开始，引入红黑树的数据结构和扩容的优化。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://yydcdut.com/categories/Java/"/>
    
    
      <category term="源码" scheme="http://yydcdut.com/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
</feed>
